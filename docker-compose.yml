services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    restart: always
    networks:
      - traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./traefik/config:/etc/traefik
      - ./traefik/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=production"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.lontra.tech`)"
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"

  portainer:
    image: registry.docker.ir/portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer-dashboard.tls=true"
      - "traefik.http.routers.portainer-dashboard.entrypoints=websecure"
      - "traefik.http.routers.portainer-dashboard.tls.certresolver=production"
      - "traefik.http.services.portainer-dashboard.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer-dashboard.rule=Host(`portainer.lontra.tech`)"


  adserver:
    image: allyellow/adserver:latest
    restart: always
    command:
      - ./adserver
    depends_on:
      - panel
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adserver.tls=true"
      - "traefik.http.routers.adserver.entrypoints=websecure"
      - "traefik.http.routers.adserver.tls.certresolver=production"
      - "traefik.http.services.adserver.loadbalancer.server.port=9090"
      - "traefik.http.routers.adserver.rule=Host(`adserver.lontra.tech`)"

  eventserver:
    image: allyellow/eventserver:latest
    restart: always
    command:
      - ./eventserver
    depends_on:
      - publisher
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.eventserver.tls=true"
      - "traefik.http.routers.eventserver.entrypoints=websecure"
      - "traefik.http.routers.eventserver.tls.certresolver=production"
      - "traefik.http.services.eventserver.loadbalancer.server.port=8081"
      - "traefik.http.routers.eventserver.rule=Host(`eventserver.lontra.tech`)"

  panel:
    image: allyellow/panel:latest
    restart: always
    command:
      - ./panel
    depends_on:
      - db
    networks:
      - traefik
    volumes:
      - ./Panel/media:/app/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.panel.tls=true"
      - "traefik.http.routers.panel.entrypoints=websecure"
      - "traefik.http.routers.panel.tls.certresolver=production"
      - "traefik.http.services.panel.loadbalancer.server.port=8082"
      - "traefik.http.routers.panel.rule=Host(`panel.lontra.tech`)"

  publisher:
    image: allyellow/publisher:latest
    restart: always
    command:
      - ./publisher
    depends_on:
      - adserver
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.publisher.tls=true"
      - "traefik.http.routers.publisher.entrypoints=websecure"
      - "traefik.http.routers.publisher.tls.certresolver=production"
      - "traefik.http.services.publisher.loadbalancer.server.port=8089"
      - "traefik.http.routers.publisher.rule=Host(`publisher.lontra.tech`)"
  reporter:
    image: allyellow/reporter:latest
    restart: always
    command:
      - ./reporter
    depends_on:
      - eventserver
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reporter.tls=true"
      - "traefik.http.routers.reporter.entrypoints=websecure"
      - "traefik.http.routers.reporter.tls.certresolver=production"
      - "traefik.http.services.reporter.loadbalancer.server.port=9999"
      - "traefik.http.routers.publisher.rule=Host(`reporter.lontra.tech`)"

  pgadmin:
    image: registry.docker.ir/dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: pooriarahimi159@gmail.com
      PGADMIN_DEFAULT_PASSWORD: yektanet1234
    restart: always
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls.certresolver=production"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.lontra.tech`)"

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yektanet1234
      POSTGRES_DB: postgres_db
    restart: always
    networks:
      - traefik
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    networks:
      - traefik
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=production"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.rule=Host(`grafana.lontra.tech`)"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    networks:
      - traefik
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=production"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.lontra.tech`)"

volumes:
  postgres_data:
  grafana-storage:

networks:
  traefik:
    name: traefik
  internal:
    driver: bridge
