services:
  traefik:
    image: "registry.docker.ir/traefik:v3.1"
    container_name: "traefik"
    command:
      - "--api.insecure=true" # Enables the Traefik dashboard (insecure for local development)
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false" # Only expose services with specific labels
      - "--entryPoints.web.address=:80" # HTTP entry point
      - "--entryPoints.websecure.address=:443" # HTTPS entry point (optional if needed)
      - "--entryPoints.traefik.address=:8080" # Entry point for Traefik dashboard
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      # - ./config/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ./letsencrypt:/letsencrypt
    networks:
      - traefik
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.routers.traefik-dashboard.rule=PathPrefix(`/traefik`))"
      - "traefik.http.middlewares.trafik-dashboard.stripprefix.prefixes=/traefik"
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    networks:
      - traefik
    ports:
      - 9443:9443
      - 8000:8000
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.routers.portainer.rule=PathPrefix(`portainer`)"
      - "traefik.http.middlewares.portainer.stripprefix.prefixes=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    restart: always

  adserver:
    build:
      context: ./AdServer
      dockerfile: Dockerfile
    depends_on:
      - panel
    networks:
      - traefik
    restart: always
    labels:
      - "traefik.adserver.rule=PathPrefixStrip: /adserver"
      - "traefik.port=9090"
    command:
      - ./adserver

  eventserver:
    build:
      context: ./EventServer
      dockerfile: Dockerfile
    depends_on:
      - publisher
    networks:
      - traefik
    restart: always
    labels:
      - "traefik.eventserver.rule=PathPrefixStrip: /eventserver"
      - "traefik.port=8080"
    command:
      - ./eventserver

  panel:
    build:
      context: ./Panel
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - traefik
    ports:
      - "8082:8082"
    restart: always
    labels:
      - "traefik.panel.rule=PathPrefixStrip: /panel"
      - "traefik.port=8082"
    command:
      - ./panel

  publisher:
    build:
      context: ./Publisher_Website
      dockerfile: Dockerfile
    depends_on:
      - adserver
    networks:
      - traefik
    restart: always
    labels:
      - "traefik.publisher.rule=PathPrefixStrip: /publisher"
      - "traefik.port=8081"
    command:
      - ./publisher

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: pooriarahimi159@gmail.com
      PGADMIN_DEFAULT_PASSWORD: yektanet1234
    ports:
      - "5050:80"
    networks:
      - traefik
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=PathPrefix(`/pgadmin/`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=5050"

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yektanet1234
      POSTGRES_DB: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik
    restart: always

volumes:
  postgres_data:

networks:
  traefik:
    name: traefik
  internal:
    driver: bridge
